{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEGION\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { findAllByDisplayValue } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const [expensesAfterFiltr, setExpensesAfterFiltr] = useState(props.Expenses);\n\n  const filterChangeHandller = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(filteredYear);\n    setExpensesAfterFiltr(() => {\n      return props.expense.filtr(year => year.toLocaleDateString(\"en-us\", {\n        year: \"numeric\"\n      }) == new DatefilteredYear());\n    });\n    console.log(expensesAfterFiltr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandller\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), props.expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"3ZufH62yfkkclxxvIP6/2B3Aors=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/LEGION/Desktop/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["react","useState","ExpenseItem","ExpensesFilter","findAllByDisplayValue","Expenses","props","filteredYear","setFilteredYear","expensesAfterFiltr","setExpensesAfterFiltr","filterChangeHandller","selectedYear","console","log","expense","filtr","year","toLocaleDateString","DatefilteredYear","expenses","map","title","amount","date","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;AACA,SAASC,qBAAT,QAAsC,wBAAtC;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAACK,KAAK,CAACD,QAAP,CAA5D;;AAEA,QAAMM,oBAAoB,GAAIC,YAAD,IAAkB;AAC7CJ,IAAAA,eAAe,CAACI,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEAG,IAAAA,qBAAqB,CAAC,MAAM;AAC1B,aAAOJ,KAAK,CAACS,OAAN,CAAcC,KAAd,CACJC,IAAD,IACGA,IAAI,CAACC,kBAAL,CAAwB,OAAxB,EAAiC;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAjC,CAAD,IAA2D,IAAIE,gBAAJ,EAFxD,CAAP;AAID,KALoB,CAArB;AAMAN,IAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEF,YADZ;AAEE,MAAA,cAAc,EAAEI;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGL,KAAK,CAACc,QAAN,CAAeC,GAAf,CAAoBN,OAAD,iBAClB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACS;AAJhB,OACOT,OAAO,CAACU,EADf;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlCQpB,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import react, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport { findAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const [expensesAfterFiltr, setExpensesAfterFiltr] = useState(props.Expenses);\r\n\r\n  const filterChangeHandller = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(filteredYear);\r\n\r\n    setExpensesAfterFiltr(() => {\r\n      return props.expense.filtr(\r\n        (year) =>\r\n          (year.toLocaleDateString(\"en-us\", { year: \"numeric\" })) == new DatefilteredYear\r\n      );\r\n    });\r\n    console.log(expensesAfterFiltr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandller}\r\n      />\r\n\r\n      {props.expenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}